<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">
    <insert id="join" parameterType="user">
        INSERT INTO user(loginId, password, nickName,mobile, gender, birthDate, region, mbtiId , fileId)
        VALUES(#{loginId},#{password},#{nickName}, #{mobile}, #{gender},#{birthDate},#{region}, #{mbtiId}, #{fileId});
    </insert>
    <select id="login" parameterType="user" resultType="user">
        SELECT * FROM user WHERE loginId = #{loginId} AND password = #{password};
    </select>
    <select id="getUserById" parameterType="int" resultType="user">
        SELECT * FROM user WHERE id = #{userId};
    </select>
    <update id="modify" parameterType="user">
        UPDATE user SET nickName=#{nickName}, region = #{region} WHERE id = #{id};
    </update>
    <update id="delete" parameterType="int">
        UPDATE user SET status = -1 WHERE id = #{id};
    </update>
    <select id="getUserByLoginId" parameterType="String" resultType="user">
        SELECT * FROM user WHERE loginId = #{loginId};
    </select>
    <update id="updateUserStatus" parameterType="user">
        UPDATE user SET status = #{status} WHERE id = #{id};
    </update>
    <select id="nickNameCheck" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM user WHERE nickName = #{nickName};
    </select>

    <!-- 신청 존재 여부: 대기/수락 상태만 중복으로 간주 -->
    <select id="existsUserSchedule" parameterType="userSchedule" resultType="int">
        SELECT COUNT(*)
        FROM userschedule
        WHERE userId = #{userId}
        AND groupScheduleId = #{groupScheduleId}
        AND status IN (0, 1)
    </select>

    <!-- 취소됐다가 재신청할 때 -1 -> 0으로 복구 -->
    <update id="reapplyUserSchedule" parameterType="userSchedule">
        UPDATE userschedule
        SET status = 0, updatedAt = NOW()
        WHERE userId = #{userId}
        AND groupScheduleId = #{groupScheduleId}
        AND status = -1
    </update>

    <!-- 신규 신청 -->
    <insert id="createUserSchedule" parameterType="userSchedule">
        INSERT INTO userschedule (userId, groupScheduleId, status)
        VALUES (#{userId}, #{groupScheduleId}, 0)
    </insert>

    <!-- 내 현재 상태 조회 -->
    <select id="getMyScheduleStatus" parameterType="userSchedule" resultType="int">
        SELECT status
        FROM userschedule
        WHERE userId = #{userId}
        AND groupScheduleId = #{groupScheduleId}
        LIMIT 1
    </select>

    <!-- 신청 취소 -->
    <update id="cancelUserSchedule" parameterType="userSchedule">
        UPDATE userschedule
        SET status = -1, updatedAt = NOW()
        WHERE userId = #{userId}
        AND groupScheduleId = #{groupScheduleId}
        AND status IN (0, 1)
    </update>

    <select id="isJoin" parameterType="userSchedule" resultType="userSchedule">
        SELECT * FROM userschedule WHERE userId = #{userId} AND groupScheduleId = #{groupScheduleId};
    </select>



    <select id="loginIdCheck" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM user WHERE loginId = #{loginId};
    </select>

    <update id="updateLastLogin" parameterType="user">
        UPDATE user SET lastLogin = now() WHERE id= #{id};
    </update>

</mapper>