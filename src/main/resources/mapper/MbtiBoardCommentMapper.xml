<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MbtiBoardComment">

    <!-- 댓글 저장 -->
    <insert id="save" parameterType="com.spring.mbti.dto.MbtiBoardCommentDTO">
        INSERT INTO mbtiboardcomment (boardId, parentId, author, content, createdAt, status)
        VALUES (#{boardId}, #{parentId}, #{author}, #{content}, NOW(), 0)
    </insert>

    <!-- 공통 결과 매핑 -->
    <resultMap id="CommentResultMap" type="com.spring.mbti.dto.MbtiBoardCommentDTO">
        <id     property="id"        column="id"/>
        <result property="boardId"   column="boardId"/>
        <result property="parentId"  column="parentId"/>
        <result property="author"    column="author"/>
        <result property="content"   column="content"/>
        <result property="createdAt" column="createdAt"/>
        <!-- JSP에서 사용하는 필드 -->
        <result property="authorNickname" column="authorNickname"/>
        <result property="profileFileId"  column="profileFileId"/>
    </resultMap>

    <!-- 댓글 전체 조회 (댓글 + 대댓글, 프로필/닉네임 포함) -->
    <select id="findAllByBoardId" parameterType="long" resultMap="CommentResultMap">
        SELECT
        c.id,
        c.boardId,
        c.parentId,
        c.author,
        c.content,
        c.createdAt,
        u.nickName              AS authorNickname,
        IFNULL(u.fileId, 0)     AS profileFileId
        FROM mbtiboardcomment c
        JOIN `user` u ON u.id = c.author
        WHERE c.boardId = #{boardId}
        AND c.status  = 0
        ORDER BY c.parentId ASC, c.id ASC
    </select>

    <!-- 동일 기능: 서비스에서 이 id를 쓰는 경우 대비 -->
    <select id="findByBoardId" parameterType="long" resultMap="CommentResultMap">
        SELECT
        c.id,
        c.boardId,
        c.parentId,
        c.author,
        c.content,
        c.createdAt,
        u.nickName              AS authorNickname,
        IFNULL(u.fileId, 0)     AS profileFileId
        FROM mbtiboardcomment c
        JOIN `user` u ON u.id = c.author
        WHERE c.boardId = #{boardId}
        AND c.status  = 0
        ORDER BY c.parentId ASC, c.id ASC
    </select>

    <!-- 댓글 단일 조회 (권한 체크/수정용) -->
    <select id="findById" parameterType="long" resultType="com.spring.mbti.dto.MbtiBoardCommentDTO">
        SELECT id, boardId, parentId, author, content, createdAt, status
        FROM mbtiboardcomment
        WHERE id = #{id}
    </select>

    <!-- 댓글 수정 -->
    <update id="update" parameterType="com.spring.mbti.dto.MbtiBoardCommentDTO">
        UPDATE mbtiboardcomment
        SET content = #{content}
        WHERE id = #{id}
    </update>

    <!-- 댓글 논리 삭제 -->
    <update id="delete" parameterType="long">
        UPDATE mbtiboardcomment
        SET status = 1
        WHERE id = #{id}
    </update>

</mapper>
