<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Chat">
    <select id="getChatFriends" parameterType="int" resultType="chatUser">
        SELECT
        u.id,
        f.status,
        cs.unreadCount,
        u.nickName,
        u.gender,
        m.mbti AS mbti,
        cs.content AS lastChatContent,
        u.lastLogin AS lastLoginTime,
        cs.sendAt AS lastChatTime
        FROM user AS u
        JOIN mbti AS m
        ON m.id = u.mbtiId
        JOIN friends AS f
        ON (
        (f.requestUserId = #{userId} AND f.responseUserId = u.id)
        OR (f.responseUserId = #{userId} AND f.requestUserId = u.id)
        )
        AND f.status >= 0
        LEFT JOIN (
        SELECT
        CASE
        WHEN c.requestUserId = #{userId}
        THEN c.responseUserId
        ELSE c.requestUserId
        END AS friendId,
        c.sendAt,
        c.content,
        SUM(
        CASE
        WHEN c.responseUserId = #{userId} AND c.isRead = 0
        THEN 1
        ELSE 0
        END
        ) OVER (
        PARTITION BY
        CASE
        WHEN c.requestUserId = #{userId}
        THEN c.responseUserId
        ELSE c.requestUserId
        END
        ) AS unreadCount,
        ROW_NUMBER() OVER (
        PARTITION BY
        CASE
        WHEN c.requestUserId = #{userId}
        THEN c.responseUserId
        ELSE c.requestUserId
        END
        ORDER BY
        c.sendAt DESC
        ) AS rn
        FROM chat AS c
        WHERE
        c.requestUserId = #{userId} OR c.responseUserId = #{userId}
        ) AS cs
        ON cs.friendId = u.id AND cs.rn = 1
        LEFT JOIN mbti
        ON u.mbtiId = mbti.id
        ORDER BY
        f.status ASC,
        cs.sendAt DESC,
        f.responsedAt DESC,
        u.nickName ASC;
    </select>
    <select id="getChatMessages" parameterType="chatMessage" resultType="chatMessage">
        SELECT * FROM chat WHERE (requestUserId = #{requestUserId} AND responseUserId = #{responseUserId})
        OR
        (requestUserId = #{responseUserId} AND responseUserId = #{requestUserId}) AND status = 1;
    </select>
    <update id="readChatMessages" parameterType="chatMessage">
        UPDATE chat SET isRead = 1 WHERE requestUserId = #{requestUserId} AND responseUserId = #{responseUserId};
    </update>
    <insert id="Chat.requestChat" parameterType="chatMessage">
        INSERT INTO friends (requestUserId, responseUserId, state) VALUES (#{requestUserId}, #{responseUserId}, 2);
    </insert>
    <update id="Chat.acceptChat" parameterType="chatMessage">

    </update>
    <update id="Chat.declineChat" parameterType="chatMessage">

    </update>
</mapper>